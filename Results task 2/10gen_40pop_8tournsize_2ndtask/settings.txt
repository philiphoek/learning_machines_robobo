controller = robotController(robobo.SimulationRobobo().connect(address='127.0.0.1', port=19997))

weight_upper = 1
weight_lower = -1
# cross two individuals with probability CXPB
CXPB = 0.9
# mutate an individual with probability MUTPB
MUTPB = 0.1
# mu: Mean or :term:`python:sequence` of means for the gaussian addition mutation.
MU = 0
# sigma: Standard deviation or :term:`python:sequence` of standard deviations for the gaussian addition mutation.
SIGMA = 0.1
# indpb: Independent probability for each attribute to be mutated.
INDPB = 0.1
# tournsize: The number of individuals participating in each tournament.
TOURNSIZE = 8
###########
# DO NOT CHANGE
###########
NGEN = 10
npop = 40
RUNS = 2


if (controller.rob.check_for_collision()):
    object_hit = 1
    # stop the simulation ones an object is hit
    print('Object is hit')
    break

if controller.top_left == 1 or controller.top_right == 1:
    reward_for_seeing_object += 1

if controller.bottom_left == 1 or controller.bottom_right == 1:
    reward_for_seeing_object += 2.5

if controller.top_center == 1:
    reward_for_seeing_object += 2

if controller.bottom_center == 1:
    reward_for_seeing_object += 3


if (controller.detect_object()):
    times_near_object += 1   


if (i > 15):
    distance_travelled_in_last_15_steps = getDistance(intermediate_position[i - 15], intermediate_position[i])

    if (distance_travelled_in_last_15_steps < 0.10):

        doing_circles_penalty += 3 



fitness = (50 * controller.rob.collected_food() + reward_for_seeing_object - 70 * object_hit - times_near_object - doing_circles_penalty)